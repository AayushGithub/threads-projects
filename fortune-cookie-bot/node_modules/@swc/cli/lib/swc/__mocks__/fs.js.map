{"version":3,"sources":["../../../src/swc/__mocks__/fs.ts"],"sourcesContent":["import fs from 'fs';\nimport type { Stats } from \"fs\";\n\n\nexport interface MockHelpers {\n  resetMockStats: () => void;\n  setMockStats: (stats: Record<string, Stats | Error>) => void;\n}\n\nconst fsMock = jest.createMockFromModule<typeof fs & MockHelpers>('fs');\n\nlet mockStats: Record<string, Stats | Error> = {}\n\nfunction setMockStats(stats: Record<string, Stats | Error>) {\n  Object.entries(stats).forEach(([path, stats]) => {\n    mockStats[path] = stats;\n  });\n}\nfunction resetMockStats() {\n  mockStats = {};\n}\n\nexport function stat(path: string, cb: (err?: Error, stats?: Stats) => void) {\n  const result = mockStats[path];\n  if (result instanceof Error) {\n    cb(result, undefined);\n  } else {\n    cb(undefined, result);\n  }\n}\n\nfsMock.setMockStats = setMockStats;\nfsMock.resetMockStats = resetMockStats;\n\nfsMock.stat = stat as typeof fs.stat;\n\nexport default fsMock;"],"names":["stat","fsMock","jest","createMockFromModule","mockStats","setMockStats","stats","Object","entries","forEach","path","resetMockStats","cb","result","Error","undefined"],"mappings":";;;;;;;;;;;IAsBgBA,IAAI,MAAJA;IAchB,OAAsB,MAAtB;;AA3BA,MAAMC,SAASC,KAAKC,oBAAoB,CAA0B;AAElE,IAAIC,YAA2C,CAAC;AAEhD,SAASC,aAAaC,KAAoC,EAAE;IAC1DC,OAAOC,OAAO,CAACF,OAAOG,OAAO,CAAC,CAAC,CAACC,MAAMJ,MAAM,GAAK;QAC/CF,SAAS,CAACM,KAAK,GAAGJ;IACpB;AACF;AACA,SAASK,iBAAiB;IACxBP,YAAY,CAAC;AACf;AAEO,SAASJ,KAAKU,IAAY,EAAEE,EAAwC,EAAE;IAC3E,MAAMC,SAAST,SAAS,CAACM,KAAK;IAC9B,IAAIG,kBAAkBC,OAAO;QAC3BF,GAAGC,QAAQE;IACb,OAAO;QACLH,GAAGG,WAAWF;IAChB,CAAC;AACH;AAEAZ,OAAOI,YAAY,GAAGA;AACtBJ,OAAOU,cAAc,GAAGA;AAExBV,OAAOD,IAAI,GAAGA;MAEd,WAAeC"}